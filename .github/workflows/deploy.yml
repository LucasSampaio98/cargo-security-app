# .github/workflows/deploy.yml
# name: Deploy to AWS

# on:
#   push:
#     branches: [ main ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3

#     - name: Setup Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '18'

#     - name: Install dependencies
#       run: npm ci

#     - name: Run tests
#       run: npm run test

#     - name: Build application
#       run: npm run build
#       env:
        # DATABASE_URL: ${{ secrets.DATABASE_URL }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#     - name: Deploy to AWS
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-east-1

#     - name: Deploy with AWS CodeDeploy
#       run: |
#         # Comandos de deploy para EC2 ou ECS
#         echo "Deploying to AWS..."

# Simplified version for build and test
name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

    - name: Build application
      run: npm run build
      env:
        # Fake url just to build
        DATABASE_URL: postgresql://user:pass@localhost:5432/db